{"version":3,"file":"static/js/865.317c6266.chunk.js","mappings":"wMAoBA,EAlB0B,SAAC,GAAwC,IAAtCA,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClD,OACE,+BACE,SAAC,IAAD,WACE,SAAC,EAAAC,EAAD,CACEH,MAAOA,EACPD,SAAU,SAAAK,GAAC,OAAIL,EAASK,EAAEC,OAAOL,MAAtB,EACXM,YAAW,gBAAWL,GACtBC,QAASA,EACTK,KAAK,KACLC,KAAMP,EACNA,KAAMA,OAKf,C,yICuBD,EAhC6B,SAAC,GAAwC,IAAtCQ,EAAqC,EAArCA,SAAUR,EAA2B,EAA3BA,KAAMD,EAAqB,EAArBA,MAAOE,EAAc,EAAdA,QACrD,GAAgCQ,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAIA,OACE,+BACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAYL,KAAK,KAAjB,WACE,SAAC,EAAAJ,EAAD,CACEH,MAAOA,EACPD,SAAU,SAAAK,GACRK,EAASL,EAAEC,OAAOL,MACnB,EACDQ,KAAMG,EAAW,OAAS,WAC1BL,YAAY,iBACZJ,QAASA,EACTK,KAAK,KACLN,KAAMA,KAGR,SAAC,IAAD,CAAmBY,MAAM,SAAzB,UACE,SAAC,IAAD,CAAQC,EAAE,UAAUP,KAAK,KAAKQ,QAnBhB,kBAAMH,GAAaD,EAAnB,EAmBd,SACGA,EAAW,OAAS,iBAOlC,C,oLC9BM,SAASK,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BR,EAAAA,EAAAA,UAAS,IAAnC,eAAOS,EAAP,KAAcC,EAAd,KACA,GAA0BV,EAAAA,EAAAA,UAAS,IAAnC,eAAOW,EAAP,KAAcC,EAAd,KACA,GAAgCZ,EAAAA,EAAAA,UAAS,IAAzC,eAAOa,EAAP,KAAiBC,EAAjB,KACA,GAA0Cd,EAAAA,EAAAA,UAAS,IAAnD,eAAOe,EAAP,KAAsBC,EAAtB,KAQA,OACE,iCACE,SAAC,IAAD,CAASC,GAAG,KAAKpB,KAAK,KAAtB,qBAGA,SAAC,KAAD,WACE,kBAAMqB,SAZO,SAAAxB,GACjBA,EAAEyB,iBACF,IAAMC,EAAO,CAAE7B,KAAMkB,EAAOE,MAAAA,EAAOE,SAAAA,GACnCN,EAASc,EAAAA,GAAAA,SAAwBD,GAClC,EAQK,WACE,SAAC,IAAD,oBACA,SAAC,IAAD,CACE/B,SAAUqB,EACVpB,MAAOmB,EACPlB,KAAM,OACNC,QAAS,YAGX,SAAC,IAAD,qBACA,SAAC,IAAD,CACEH,SAAUuB,EACVtB,MAAOqB,EACPpB,KAAM,QACNC,QAAS,aAGX,SAAC,IAAD,wBACA,SAAC,IAAD,CACEO,SAAUe,EACVvB,KAAM,WACND,MAAOuB,EACPrB,QAAS,aAGX,SAAC,IAAD,wBACA,SAAC,IAAD,CACEO,SAAUiB,EACVzB,KAAM,gBACND,MAAOyB,EACPvB,QAAS,cAGX,SAAC,IAAD,CAGEM,KAAK,SAHP,2BAWT,CAED,W","sources":["components/Authorization/EmailInput/EmailInput.jsx","components/Authorization/PasswordInput/PasswordInput.jsx","components/Authorization/SingIn.jsx"],"sourcesContent":["import { FormLabel, Input } from '@chakra-ui/react';\n\nexport const EmailInput = ({ onChange, value, name, variant }) => {\n  return (\n    <>\n      <FormLabel>\n        <Input\n          value={value}\n          onChange={e => onChange(e.target.value)}\n          placeholder={`Enter ${name}`}\n          variant={variant}\n          size=\"md\"\n          type={name}\n          name={name}\n        />\n      </FormLabel>\n    </>\n  );\n};\n\nexport default EmailInput;\n","import { useState } from 'react';\nimport {\n  FormLabel,\n  InputRightElement,\n  InputGroup,\n  Input,\n  Button,\n} from '@chakra-ui/react';\n\nexport const PasswordInput = ({ onChenge, name, value, variant }) => {\n  const [showPass, setShowPass] = useState(false);\n\n  const handleClickPass = () => setShowPass(!showPass);\n\n  return (\n    <>\n      <FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={value}\n            onChange={e => {\n              onChenge(e.target.value);\n            }}\n            type={showPass ? 'text' : 'password'}\n            placeholder=\"Enter password\"\n            variant={variant}\n            size=\"md\"\n            name={name}\n          />\n\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClickPass}>\n              {showPass ? 'Hide' : 'Show'}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormLabel>\n    </>\n  );\n};\n\nexport default PasswordInput;\n","import { useState } from 'react';\nimport { Heading, FormControl, Button, FormLabel } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\n\nimport { authOperations } from 'redux/auth';\n\nimport PasswordInput from './PasswordInput';\nimport EmailInput from './EmailInput';\n\nexport function SingIn() {\n  const dispatch = useDispatch();\n\n  const [login, setLogin] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordCheck, setPasswordCheck] = useState('');\n\n  const submitUser = e => {\n    e.preventDefault();\n    const user = { name: login, email, password };\n    dispatch(authOperations.register(user));\n  };\n\n  return (\n    <>\n      <Heading as=\"h2\" size=\"xl\">\n        SingIn\n      </Heading>\n      <FormControl>\n        <form onSubmit={submitUser}>\n          <FormLabel>Name</FormLabel>\n          <EmailInput\n            onChange={setLogin}\n            value={login}\n            name={'Name'}\n            variant={'filled'}\n          />\n\n          <FormLabel>Email</FormLabel>\n          <EmailInput\n            onChange={setEmail}\n            value={email}\n            name={'email'}\n            variant={'outline'}\n          />\n\n          <FormLabel>Password</FormLabel>\n          <PasswordInput\n            onChenge={setPassword}\n            name={'password'}\n            value={password}\n            variant={'flushed'}\n          />\n\n          <FormLabel>Password</FormLabel>\n          <PasswordInput\n            onChenge={setPasswordCheck}\n            name={'passwordCheck'}\n            value={passwordCheck}\n            variant={'unstyled'}\n          />\n\n          <Button\n            // disabled={passwordCheck === '' ?? (password === '' && 'disabled')}\n            // tipe=\"submit\"\n            type=\"submit\"\n          >\n            SingIn\n          </Button>\n        </form>\n      </FormControl>\n    </>\n  );\n}\n\nexport default SingIn;\n"],"names":["onChange","value","name","variant","I","e","target","placeholder","size","type","onChenge","useState","showPass","setShowPass","width","h","onClick","SingIn","dispatch","useDispatch","login","setLogin","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","as","onSubmit","preventDefault","user","authOperations"],"sourceRoot":""}