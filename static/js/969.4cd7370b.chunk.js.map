{"version":3,"file":"static/js/969.4cd7370b.chunk.js","mappings":"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","sources":["components/ContactsItem/ContactItem.jsx","pages/Contacts/Contacts.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-3HLJVDJ7.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs"],"sourcesContent":["import { Button, Text, Flex } from '@chakra-ui/react';\n\nexport function ContactItems({ id, name, number, remove }) {\n  return (\n    <>\n      <Text fontSize=\"2xl\">{name}:</Text>\n\n      <Flex direction=\"row\">\n        <Text fontSize=\"2xl\">{number}</Text>\n\n        <Button type=\"button\" onClick={() => remove(id)}>\n          Delete\n        </Button>\n      </Flex>\n    </>\n  );\n}\n\nexport default ContactItems;\n","import {\n  Heading,\n  FormControl,\n  FormLabel,\n  Flex,\n  OrderedList,\n  ListItem,\n} from '@chakra-ui/react';\nimport { useState, useEffect } from 'react';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport EmailInput from 'components/Authorization/EmailInput';\n\nimport ContactItems from 'components/ContactsItem/ContactItem';\n\nexport function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.allContacts);\n\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const removeContacts = id => {\n    dispatch(contactsOperations.removeContacts(id));\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"center\" justify=\"center\" gap=\"20px\">\n      <Heading as=\"h1\" size=\"2xl\">\n        Contacts\n      </Heading>\n\n      <FormControl width=\"400px\">\n        <form>\n          <FormLabel>Search Contacts</FormLabel>\n          <EmailInput\n            onChange={setSearch}\n            value={search}\n            name={'name'}\n            variant={'filled'}\n          />\n        </form>\n      </FormControl>\n\n      <Heading as=\"h2\" size=\"lg\">\n        Contacts List\n      </Heading>\n      <OrderedList display=\"flex\" flexDirection=\"column\" gap=\"10px\">\n        {contacts.length !== 0 ? (\n          contacts\n            .filter(contact =>\n              contact.name.toLowerCase().includes(search.toLocaleLowerCase())\n            )\n            .map(({ name, number, id }) => (\n              <ListItem\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                direction=\"row\"\n                gap=\"20px\"\n                key={id}\n              >\n                <ContactItems\n                  name={name}\n                  number={number}\n                  id={id}\n                  remove={removeContacts}\n                />\n              </ListItem>\n            ))\n        ) : (\n          <p>No contacts</p>\n        )}\n      </OrderedList>\n    </Flex>\n  );\n}\n\nexport default Contacts;\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n"],"names":["id","name","number","remove","fontSize","direction","type","onClick","dispatch","useDispatch","contacts","useSelector","contactsSelectors","useState","search","setSearch","useEffect","contactsOperations","removeContacts","align","justify","gap","as","size","width","EmailInput","onChange","value","variant","display","flexDirection","length","filter","contact","toLowerCase","includes","toLocaleLowerCase","map","justifyContent","ContactItem","FormLabel","forwardRef","passedProps","ref","_a","styles","useStyleConfig","props","omitThemingProps","children","className","requiredIndicator","jsx","RequiredIndicator","optionalIndicator","rest","field","useFormControlContext","ownProps","getLabelProps","jsxs","chakra","cx","__css","textAlign","isRequired","displayName","useFormControlStyles","getRequiredIndicatorProps","Heading","createContext","errorMessage","ListStylesProvider","useListStyles","List","useMultiStyleConfig","styleType","stylePosition","spacing","validChildren","getValidChildren","spacingStyle","mt","listStyleType","listStylePosition","role","container","OrderedList","marginStart","ListItem","item","Icon","icon"],"sourceRoot":""}